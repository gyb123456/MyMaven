<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">
 
    <!-- 数据库连接池 -->
    <!-- 加载配置文件 -->
    <context:property-placeholder location="classpath:resource/*.properties" />
     
    <context:component-scan base-package="com.aaa.ssh">
        	<context:include-filter type="annotation" expression="org.springframework.stereotype.Repository" />
    </context:component-scan>
     
    <!-- 数据库连接池 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
        destroy-method="close">
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="maxActive" value="10" />
        <property name="minIdle" value="5" />
    </bean>
    <!-- hibernate session -->
    <bean id="sessionFactory"
        class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" >
        <property name="dataSource" ref="dataSource" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                
                <prop key="hibernate.use_sql_comments">true</prop>
                
                <prop key="hibernate.connection.autocommit">true</prop>
                <prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext
                </prop>
            </props>
        </property>
        <property name="packagesToScan">
            <list>
                <value>com.aaa.ssh.model</value>
            </list>
        </property>
    </bean>
	
	<!-- 事务的驱动注解,使程序能根据@Transactional来生成事务代理,此处作用和 applicationContext-trans.xml文件一样-->
	<!--  <bean name="transactionManager"
			class="org.springframework.orm.hibernate4.HibernateTransactionManager"> 
			<property ref="sessionFactory" name="sessionFactory"/>
	</bean> -->
	
	 <!-- 这段配置的作用和上段一样 ，
	 Spring事务配置有三种，分别是DataSource、TransactionManager和代理机制这三部分-->
	 <bean  id="transactionManager" 
		 	class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> 
			<!-- 数据源 -->
			<property ref="dataSource" name="dataSource"/> 
	 </bean>
	 
	<tx:annotation-driven transaction-manager="transactionManager" ></tx:annotation-driven> 
	
	
</beans>